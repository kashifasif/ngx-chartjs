{"version":3,"file":"ctrl-ngx-chartjs.js.map","sources":["ng://@ctrl/ngx-chartjs/chartjs.component.ts","ng://@ctrl/ngx-chartjs/chartjs.module.ts"],"sourcesContent":["import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  NgZone,\n  OnChanges,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport {\n  ChartData,\n  ChartLegendOptions,\n  ChartOptions,\n  ChartType,\n} from 'chart.js';\n\ndeclare var require: any;\n\n@Component({\n  selector: 'ngx-chartjs',\n  template: `\n  <!-- wrapping div required for height, width to work -->\n  <div>\n    <canvas\n      #ref\n      [attr.height]=\"height\"\n      [attr.width]=\"width\"\n      (click)=\"handleOnClick($event)\"\n    ></canvas>\n  </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChartjsComponent implements AfterViewInit, OnChanges {\n  chartInstance: any;\n  @ViewChild('ref') ref: ElementRef<HTMLCanvasElement>;\n  @Output() chartClick = new EventEmitter<ChartClickEvent>();\n  /** chart type */\n  @Input() type: ChartType | string = 'doughnut';\n  @Input() data: ChartData | any;\n  @Input() height = 150;\n  @Input() width = 300;\n  @Input()\n  legend: ChartLegendOptions | any = {\n    display: true,\n    position: 'bottom',\n  };\n  @Input() options: ChartOptions | any = {};\n  @Input() plugins: any[];\n  @Input() redraw = false;\n  @Input() datasetKeyProvider: (x: any) => string = d => d.label;\n\n  constructor(private zone: NgZone) {}\n\n  ngAfterViewInit() {\n    this.renderChart();\n  }\n  ngOnChanges(changes: any) {\n    if (changes.firstChange) {\n      return;\n    }\n    if (this.chartInstance && this.redraw) {\n      this.chartInstance.destroy();\n      this.renderChart();\n      return;\n    }\n    this.updateChart();\n  }\n\n  updateChart() {\n    const data = this.transformData();\n\n    if (!this.chartInstance) {\n      return;\n    }\n\n    if (this.options) {\n      // in order to allow for universal rendering, we import chart.js runtime with `require` to prevent node errors\n      const Chart = require('chart.js');\n      this.chartInstance.options = (Chart as any).helpers.configMerge(\n        this.chartInstance.options,\n        this.options,\n      );\n    }\n\n    // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n    const currentDatasets: any[] =\n      (this.chartInstance.config.data &&\n        this.chartInstance.config.data.datasets) ||\n      [];\n    const nextDatasets = data.datasets || [];\n\n    const currentDatasetsIndexed = {};\n    currentDatasets.forEach((x) => {\n      currentDatasetsIndexed[this.datasetKeyProvider(x)] = x;\n    });\n\n    // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n    this.chartInstance.config.data.datasets = nextDatasets.map(next => {\n      const current = currentDatasetsIndexed[this.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // Reassign all properties from next\n        for (const nextProp of Object.keys(next)) {\n          // Data array can't be reassigned here.\n          if (nextProp !== 'data') {\n            current[nextProp] = next[nextProp];\n          }\n        }\n        // Remove properties from current if they was removed in next\n        for (const currentProp of Object.keys(current)) {\n          // Be careful with _meta property\n          if (!next.hasOwnProperty(currentProp) && currentProp !== '_meta') {\n            delete current[currentProp];\n          }\n        }\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach((point, pid) => {\n          current.data[pid] = next.data[pid];\n        });\n\n        return current;\n      }\n      return next;\n    });\n\n    const { datasets, ...rest } = data;\n\n    this.chartInstance.config.data = {\n      ...this.chartInstance.config.data,\n      ...rest,\n    };\n\n    this.chartInstance.update();\n  }\n\n  renderChart() {\n    const node = this.ref.nativeElement;\n    const data = this.transformData();\n\n    if (typeof this.legend !== 'undefined') {\n      const legendOptions = { ...this.legend, ...this.options.legend };\n      this.options.legend = legendOptions;\n    }\n\n    // in order to allow for universal rendering, we import Codemirror runtime with `require` to prevent node errors\n    const Chart = require('chart.js');\n\n    this.zone.runOutsideAngular(() => {\n      this.chartInstance = new Chart(node, {\n        type: this.type,\n        data,\n        options: this.options,\n        plugins: this.plugins,\n      });\n    });\n  }\n\n  transformData() {\n    if (!this.data) {\n      return;\n    }\n    if (typeof this.data === 'function') {\n      const node = this.ref;\n      return this.data(node);\n    }\n    return this.data;\n  }\n\n  handleOnClick($event: Event) {\n    this.chartClick.emit({\n      elements: this.chartInstance.getElementsAtEvent($event),\n      element: this.chartInstance.getElementAtEvent($event),\n      dataset: this.chartInstance.getDatasetAtEvent($event),\n      $event,\n    });\n  }\n}\n\nexport interface ChartClickEvent {\n  elements: any[];\n  element: any;\n  dataset: any[];\n  $event: Event;\n}\n","import { NgModule } from '@angular/core';\n\nimport { ChartjsComponent } from './chartjs.component';\n\n@NgModule({\n  exports: [ChartjsComponent],\n  declarations: [ChartjsComponent],\n})\nexport class ChartjsModule {}\n"],"names":["tslib_1.__values"],"mappings":"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"}
